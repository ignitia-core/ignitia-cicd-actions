name: Test GitHub Clean Releases Action

on:
  workflow_dispatch:
    inputs:
      semantic-version:
        description: 'Semantic version to test (e.g., 1.0.0)'
        required: true
        default: '1.0.0'
      keep:
        description: 'Number of stable releases to keep'
        required: false
        default: '10'
      clean-prereleases:
        description: 'Clean prerelease versions'
        required: false
        default: 'true'
        type: choice
        options:
          - 'true'
          - 'false'
      clean-old-releases:
        description: 'Clean old stable releases'
        required: false
        default: 'true'
        type: choice
        options:
          - 'true'
          - 'false'
      dry-run:
        description: 'Dry-run mode (preview only)'
        required: false
        default: 'true'
        type: choice
        options:
          - 'true'
          - 'false'
      repository:
        description: 'Repository to clean (leave empty for current)'
        required: false
        default: ''
  
  pull_request:
    paths:
      - 'ignitia-cicd-actions/github-clean-releases/**'
  
  push:
    branches:
      - main
    paths:
      - 'ignitia-cicd-actions/github-clean-releases/**'

jobs:
  test-action:
    name: Test Action
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Validate script syntax
        run: |
          bash -n ignitia-cicd-actions/github-clean-releases/scripts/clean-releases.sh
          echo "✅ Script syntax is valid"
      
      - name: Check required tools
        run: |
          echo "Checking required tools..."
          command -v curl >/dev/null 2>&1 || { echo "❌ curl not found"; exit 1; }
          command -v jq >/dev/null 2>&1 || { echo "❌ jq not found"; exit 1; }
          command -v sort >/dev/null 2>&1 || { echo "❌ sort not found"; exit 1; }
          echo "✅ All required tools are available"
      
      - name: Test action (dry-run)
        id: test-dry-run
        uses: ./ignitia-cicd-actions/github-clean-releases
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          semantic-version: ${{ github.event.inputs.semantic-version || '1.0.0' }}
          keep: ${{ github.event.inputs.keep || '10' }}
          clean-prereleases: ${{ github.event.inputs.clean-prereleases || 'true' }}
          clean-old-releases: ${{ github.event.inputs.clean-old-releases || 'true' }}
          dry-run: 'true'
          repo: ${{ github.event.inputs.repository }}
      
      - name: Validate outputs
        run: |
          echo "## Test Results (Dry-Run)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Metric | Value |" >> $GITHUB_STEP_SUMMARY
          echo "|--------|-------|" >> $GITHUB_STEP_SUMMARY
          echo "| Prereleases that would be deleted | ${{ steps.test-dry-run.outputs.prereleases-deleted }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Old releases that would be deleted | ${{ steps.test-dry-run.outputs.old-releases-deleted }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Tags that would be deleted | ${{ steps.test-dry-run.outputs.tags-deleted }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Total that would be deleted | ${{ steps.test-dry-run.outputs.total-deleted }} |" >> $GITHUB_STEP_SUMMARY
          echo "| API calls made | ${{ steps.test-dry-run.outputs.api-calls }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Errors encountered | ${{ steps.test-dry-run.outputs.errors }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Check that outputs are numeric
          for output in "${{ steps.test-dry-run.outputs.prereleases-deleted }}" \
                       "${{ steps.test-dry-run.outputs.old-releases-deleted }}" \
                       "${{ steps.test-dry-run.outputs.tags-deleted }}" \
                       "${{ steps.test-dry-run.outputs.total-deleted }}" \
                       "${{ steps.test-dry-run.outputs.api-calls }}" \
                       "${{ steps.test-dry-run.outputs.errors }}"; do
            if ! [[ "$output" =~ ^[0-9]+$ ]]; then
              echo "❌ Invalid output value: $output (expected numeric)"
              exit 1
            fi
          done
          
          echo "✅ All outputs are valid"
          
          # Check for errors
          if [[ "${{ steps.test-dry-run.outputs.errors }}" != "0" ]]; then
            echo "⚠️ Warning: Test encountered ${{ steps.test-dry-run.outputs.errors }} error(s)"
            echo "Check the logs for details"
          fi
      
      - name: Test actual cleanup (only on manual trigger with dry-run=false)
        if: |
          github.event_name == 'workflow_dispatch' && 
          github.event.inputs.dry-run == 'false'
        id: test-actual
        uses: ./ignitia-cicd-actions/github-clean-releases
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          semantic-version: ${{ github.event.inputs.semantic-version }}
          keep: ${{ github.event.inputs.keep }}
          clean-prereleases: ${{ github.event.inputs.clean-prereleases }}
          clean-old-releases: ${{ github.event.inputs.clean-old-releases }}
          dry-run: 'false'
          repo: ${{ github.event.inputs.repository }}
      
      - name: Report actual cleanup results
        if: steps.test-actual.conclusion != 'skipped'
        run: |
          echo "## Actual Cleanup Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "⚠️ **Warning: This was NOT a dry-run. Changes were applied!**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Metric | Value |" >> $GITHUB_STEP_SUMMARY
          echo "|--------|-------|" >> $GITHUB_STEP_SUMMARY
          echo "| Prereleases deleted | ${{ steps.test-actual.outputs.prereleases-deleted }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Old releases deleted | ${{ steps.test-actual.outputs.old-releases-deleted }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Tags deleted | ${{ steps.test-actual.outputs.tags-deleted }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Total deleted | ${{ steps.test-actual.outputs.total-deleted }} |" >> $GITHUB_STEP_SUMMARY
          echo "| API calls made | ${{ steps.test-actual.outputs.api-calls }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Errors encountered | ${{ steps.test-actual.outputs.errors }} |" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ steps.test-actual.outputs.errors }}" != "0" ]]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "❌ Cleanup completed with errors!" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi

  test-script-locally:
    name: Test Script Locally
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Test script with environment variables
        env:
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SEMVER: '0.0.1'
          KEEP: '5'
          CLEAN_PRERELEASES: 'true'
          CLEAN_OLD_RELEASES: 'true'
          DRY_RUN: 'true'
          REPO: ${{ github.repository }}
        run: |
          chmod +x ignitia-cicd-actions/github-clean-releases/scripts/clean-releases.sh
          ignitia-cicd-actions/github-clean-releases/scripts/clean-releases.sh
      
      - name: Test with invalid inputs (should fail)
        id: test-invalid
        continue-on-error: true
        env:
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SEMVER: 'invalid-version'
          KEEP: '5'
          CLEAN_PRERELEASES: 'true'
          CLEAN_OLD_RELEASES: 'true'
          DRY_RUN: 'true'
          REPO: ${{ github.repository }}
        run: |
          chmod +x ignitia-cicd-actions/github-clean-releases/scripts/clean-releases.sh
          ignitia-cicd-actions/github-clean-releases/scripts/clean-releases.sh
      
      - name: Verify validation works
        if: steps.test-invalid.outcome != 'failure'
        run: |
          echo "❌ Script should have failed with invalid version"
          exit 1
      
      - name: Validation test passed
        if: steps.test-invalid.outcome == 'failure'
        run: echo "✅ Input validation is working correctly"

  test-edge-cases:
    name: Test Edge Cases
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    strategy:
      matrix:
        test-case:
          - name: 'Prerelease version'
            version: '1.0.0-alpha'
            keep: '10'
            clean-prereleases: 'false'
            clean-old-releases: 'true'
          - name: 'Version with build metadata'
            version: '1.0.0+build.123'
            keep: '10'
            clean-prereleases: 'true'
            clean-old-releases: 'true'
          - name: 'Keep zero releases'
            version: '1.0.0'
            keep: '0'
            clean-prereleases: 'true'
            clean-old-releases: 'true'
          - name: 'Version with v prefix'
            version: 'v1.0.0'
            keep: '10'
            clean-prereleases: 'true'
            clean-old-releases: 'true'
          - name: 'High version number'
            version: '99.99.99'
            keep: '10'
            clean-prereleases: 'true'
            clean-old-releases: 'true'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Test ${{ matrix.test-case.name }}
        uses: ./ignitia-cicd-actions/github-clean-releases
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          semantic-version: ${{ matrix.test-case.version }}
          keep: ${{ matrix.test-case.keep }}
          clean-prereleases: ${{ matrix.test-case.clean-prereleases }}
          clean-old-releases: ${{ matrix.test-case.clean-old-releases }}
          dry-run: 'true'
      
      - name: Report test case result
        run: |
          echo "✅ Test case '${{ matrix.test-case.name }}' passed"
